// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id           String @id @default(cuid())
   name String?
  email        String? @unique
  passwordHash String?
 
  profileImage String
  

  orders Order[]

  createdAt DateTime @default(now())
}

model Product {
  id          String        @id @default(uuid())
  name        String
  description String
  status      ProductStatus
  price       Decimal
  images      String[]
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId String
  isFeatured  Boolean       @default(false)

  createdAt DateTime @default(now())
}

model Banner {
  id          String @id @default(uuid())
  title       String
  imageString String

  createdAt DateTime @default(now())
}

model Category {
  id          String @id @default(uuid())

  title       String @unique
  slug  String @unique

  products   Product[]
 

  createdAt DateTime @default(now())
}

// model Order {
//   id     String @id @default(uuid())
//   status String @default("pending")
//   amount Int

//   User   User?   @relation(fields: [userId], references: [id])
//   userId String?

//   createdAt DateTime @default(now())
// }
model Order {
 id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId String?

    // token String

    totalAmount Int
    status      OrderStatus
    paymentId   String?

    items Json

    fullName String
    email    String
    phone    String
    address  String
    comment  String?

    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}

enum ProductStatus {
  draft
  published
  archived
}

// enum Category {
//   men
//   women
//   kids
// }